/**
 * @awesomecss/animations v0.0.1 (https://jonquach.com)
 * A functional CSS animation library for UI interactions.
 * Licensed under MIT
 */
:root {
  --AwesomeCSSAnimationsTransitionDelay: 0;
  --AwesomeCSSAnimationsTransitionDuration: 300ms;
  --AwesomeCSSAnimationsStaggerDelay: 60;
  --AwesomeCSSAnimationsCollapseMaxHeight: 100vh;
  --AwesomeCSSAnimationsCollapseLgMaxHeight: 100em;
  --AwesomeCSSAnimationsDirectionValue: 20px;
  --AwesomeCSSAnimationsDirectionLgValue: 20%;
  --AwesomeCSSAnimationsDirectionXlValue: 50%;
  --AwesomeCSSAnimationsScaleValue: 0.8;
  --AwesomeCSSAnimationsScaleLgValue: 0.5;
  --AwesomeCSSAnimationsScaleXlValue: 0.3; }

.ax-Node {
  transition-property: all;
  transition-delay: var(--AwesomeCSSAnimationsTransitionDelay);
  transition-duration: var(--AwesomeCSSAnimationsTransitionDuration);
  transition-timing-function: ease;
  will-change: opacity; }

.ax-NodeList > * {
  transition-property: all;
  transition-duration: var(--AwesomeCSSAnimationsTransitionDuration);
  transition-timing-function: ease;
  will-change: opacity; }

.ax-NodeList.ax-stagger > * {
  transition-delay: calc( ( var(--nIndex) * var(--AwesomeCSSAnimationsStaggerDelay) + var(--AwesomeCSSAnimationsTransitionDelay) ) * 1ms); }

.ax-NodeList.ax-stagger > *:nth-child(1) {
  --nIndex: 0; }

.ax-NodeList.ax-stagger > *:nth-child(2) {
  --nIndex: 1; }

.ax-NodeList.ax-stagger > *:nth-child(3) {
  --nIndex: 2; }

.ax-NodeList.ax-stagger > *:nth-child(4) {
  --nIndex: 3; }

.ax-NodeList.ax-stagger > *:nth-child(5) {
  --nIndex: 4; }

.ax-NodeList.ax-stagger > *:nth-child(6) {
  --nIndex: 5; }

.ax-NodeList.ax-stagger > *:nth-child(7) {
  --nIndex: 6; }

.ax-NodeList.ax-stagger > *:nth-child(8) {
  --nIndex: 7; }

.ax-NodeList.ax-stagger > *:nth-child(9) {
  --nIndex: 8; }

.ax-NodeList.ax-stagger > *:nth-child(10) {
  --nIndex: 9; }

.ax-NodeList.ax-stagger > *:nth-child(11) {
  --nIndex: 10; }

.ax-NodeList.ax-stagger > *:nth-child(12) {
  --nIndex: 11; }

.ax-NodeList.ax-stagger > *:nth-child(13) {
  --nIndex: 12; }

.ax-NodeList.ax-stagger > *:nth-child(14) {
  --nIndex: 13; }

.ax-NodeList.ax-stagger > *:nth-child(15) {
  --nIndex: 14; }

.ax-NodeList.ax-stagger > *:nth-child(n+15) {
  --nIndex: 14; }

.ax-tf-ease {
  transition-timing-function: ease; }

.ax-tf-easeIn {
  transition-timing-function: ease-in; }

.ax-tf-easeInOut {
  transition-timing-function: ease-in-out; }

.ax-tf-linear {
  transition-timing-function: linear; }

.ax-tf-stepStart {
  transition-timing-function: step-start; }

.ax-tf-stepEnd {
  transition-timing-function: step-end; }

.ax-tf-initial {
  transition-timing-function: initial; }

.ax-tf-inherit {
  transition-timing-function: inherit; }

.ax-tf-bounce {
  transition-timing-function: cubic-bezier(0.680, -0.650, 0.265, 1.650); }

.ax-tf-elastic {
  transition-timing-function: cubic-bezier(0.680, -1.500, 0.265, 2.500); }

.ax-tf-ease > * {
  transition-timing-function: ease; }

.ax-tf-easeIn > * {
  transition-timing-function: ease-in; }

.ax-tf-easeInOut > * {
  transition-timing-function: ease-in-out; }

.ax-tf-linear > * {
  transition-timing-function: linear; }

.ax-tf-stepStart > * {
  transition-timing-function: step-start; }

.ax-tf-stepEnd > * {
  transition-timing-function: step-end; }

.ax-tf-initial > * {
  transition-timing-function: initial; }

.ax-tf-inherit > * {
  transition-timing-function: inherit; }

.ax-tf-bounce > * {
  transition-timing-function: cubic-bezier(0.680, -0.650, 0.265, 1.650); }

.ax-tf-elastic > * {
  transition-timing-function: cubic-bezier(0.680, -1.500, 0.265, 2.500); }

.ax-dly {
  transition-delay: calc( ( var(--axDlyIndex) * var(--AwesomeCSSAnimationsStaggerDelay) + var(--AwesomeCSSAnimationsTransitionDelay) ) * 1ms) !important; }
  .ax-dly-0 {
    --axDlyIndex: -1; }
  .ax-dly-1 {
    --axDlyIndex: 0; }
  .ax-dly-2 {
    --axDlyIndex: 1; }
  .ax-dly-3 {
    --axDlyIndex: 2; }
  .ax-dly-4 {
    --axDlyIndex: 3; }
  .ax-dly-5 {
    --axDlyIndex: 4; }
  .ax-dly-6 {
    --axDlyIndex: 5; }
  .ax-dly-7 {
    --axDlyIndex: 6; }
  .ax-dly-8 {
    --axDlyIndex: 7; }
  .ax-dly-9 {
    --axDlyIndex: 8; }
  .ax-dly-10 {
    --axDlyIndex: 9; }

.ax-collapse {
  max-height: 0;
  overflow-y: hidden;
  pointer-events: none;
  transition-duration: var(--AwesomeCSSAnimationsTransitionDuration);
  will-change: height; }
  .ax-collapse.ax-active {
    max-height: var(--AwesomeCSSAnimationsCollapseMaxHeight);
    pointer-events: auto;
    transition-duration: calc(var(--AwesomeCSSAnimationsTransitionDuration) * 2); }
  .ax-collapse--lg.ax-active {
    max-height: var(--AwesomeCSSAnimationsCollapseLgMaxHeight); }

.ax-Node.ax-down,
.ax-NodeList.ax-down > * {
  transform: translateY(calc(var(--AwesomeCSSAnimationsDirectionValue) * -1)); }

.ax-Node.ax-down.ax-active,
.ax-NodeList.ax-down.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-down,
.ax-hydrate.ax-active .ax-NodeList.ax-down > * {
  transform: translateY(0px); }

.ax-Node.ax-downLg,
.ax-NodeList.ax-downLg > * {
  transform: translateY(calc(var(--AwesomeCSSAnimationsDirectionLgValue) * -1)); }

.ax-Node.ax-downLg.ax-active,
.ax-NodeList.ax-downLg.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-downLg,
.ax-hydrate.ax-active .ax-NodeList.ax-downLg > * {
  transform: translateY(0px); }

.ax-Node.ax-downXl,
.ax-NodeList.ax-downXl > * {
  transform: translateY(calc(var(--AwesomeCSSAnimationsDirectionXlValue) * -1)); }

.ax-Node.ax-downXl.ax-active,
.ax-NodeList.ax-downXl.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-downXl,
.ax-hydrate.ax-active .ax-NodeList.ax-downXl > * {
  transform: translateY(0px); }

.ax-Node.ax-fade,
.ax-NodeList.ax-fade > * {
  opacity: 0;
  pointer-events: none;
  will-change: opacity; }

.ax-Node.ax-fade.ax-active,
.ax-NodeList.ax-fade.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-fade,
.ax-hydrate.ax-active .ax-NodeList.ax-fade > * {
  opacity: 1;
  pointer-events: auto; }

.ax-Node.ax-left,
.ax-NodeList.ax-left > * {
  transform: translateX(var(--AwesomeCSSAnimationsDirectionValue)); }

.ax-Node.ax-left.ax-active,
.ax-NodeList.ax-left.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-left,
.ax-hydrate.ax-active .ax-NodeList.ax-left > * {
  transform: translateX(0px); }

.ax-Node.ax-leftLg,
.ax-NodeList.ax-leftLg > * {
  transform: translateX(var(--AwesomeCSSAnimationsDirectionLgValue)); }

.ax-Node.ax-leftLg.ax-active,
.ax-NodeList.ax-leftLg.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-leftLg,
.ax-hydrate.ax-active .ax-NodeList.ax-leftLg > * {
  transform: translateX(0px); }

.ax-Node.ax-leftXl,
.ax-NodeList.ax-leftXl > * {
  transform: translateX(var(--AwesomeCSSAnimationsDirectionXlValue)); }

.ax-Node.ax-leftXl.ax-active,
.ax-NodeList.ax-leftXl.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-leftXl,
.ax-hydrate.ax-active .ax-NodeList.ax-leftXl > * {
  transform: translateX(0px); }

.ax-Node.ax-right,
.ax-NodeList.ax-right > * {
  transform: translateX(calc(var(--AwesomeCSSAnimationsDirectionValue) * -1)); }

.ax-Node.ax-right.ax-active,
.ax-NodeList.ax-right.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-right,
.ax-hydrate.ax-active .ax-NodeList.ax-right > * {
  transform: translateX(0px); }

.ax-Node.ax-rightLg,
.ax-NodeList.ax-rightLg > * {
  transform: translateX(calc(var(--AwesomeCSSAnimationsDirectionLgValue) * -1)); }

.ax-Node.ax-rightLg.ax-active,
.ax-NodeList.ax-rightLg.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-rightLg,
.ax-hydrate.ax-active .ax-NodeList.ax-rightLg > * {
  transform: translateX(0px); }

.ax-Node.ax-rightXl,
.ax-NodeList.ax-rightXl > * {
  transform: translateX(calc(var(--AwesomeCSSAnimationsDirectionXlValue) * -1)); }

.ax-Node.ax-rightXl.ax-active,
.ax-NodeList.ax-rightXl.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-rightXl,
.ax-hydrate.ax-active .ax-NodeList.ax-rightXl > * {
  transform: translateX(0px); }

.ax-Node.ax-scale,
.ax-NodeList.ax-scale > * {
  transform: scale(var(--AwesomeCSSAnimationsScaleValue)); }

.ax-Node.ax-scale.ax-active,
.ax-NodeList.ax-scale.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-scale,
.ax-hydrate.ax-active .ax-NodeList.ax-scale > * {
  transform: scale(1); }

.ax-Node.ax-scaleLg,
.ax-NodeList.ax-scaleLg > * {
  transform: scale(var(--AwesomeCSSAnimationsScaleLgValue)); }

.ax-Node.ax-scaleLg.ax-active,
.ax-NodeList.ax-scaleLg.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-scaleLg,
.ax-hydrate.ax-active .ax-NodeList.ax-scaleLg > * {
  transform: scale(1); }

.ax-Node.ax-scaleXl,
.ax-NodeList.ax-scaleXl > * {
  transform: scale(var(--AwesomeCSSAnimationsScaleXlValue)); }

.ax-Node.ax-scaleXl.ax-active,
.ax-NodeList.ax-scaleXl.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-scaleXl,
.ax-hydrate.ax-active .ax-NodeList.ax-scaleXl > * {
  transform: scale(1); }

.ax-Node.ax-up,
.ax-NodeList.ax-up > * {
  transform: translateY(var(--AwesomeCSSAnimationsDirectionValue)); }

.ax-Node.ax-up.ax-active,
.ax-NodeList.ax-up.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-up,
.ax-hydrate.ax-active .ax-NodeList.ax-up > * {
  transform: translateY(0px); }

.ax-Node.ax-upLg,
.ax-NodeList.ax-upLg > * {
  transform: translateY(var(--AwesomeCSSAnimationsDirectionLgValue)); }

.ax-Node.ax-upLg.ax-active,
.ax-NodeList.ax-upLg.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-upLg,
.ax-hydrate.ax-active .ax-NodeList.ax-upLg > * {
  transform: translateY(0px); }

.ax-Node.ax-upXl,
.ax-NodeList.ax-upXl > * {
  transform: translateY(var(--AwesomeCSSAnimationsDirectionXlValue)); }

.ax-Node.ax-upXl.ax-active,
.ax-NodeList.ax-upXl.ax-active > *,
.ax-hydrate.ax-active .ax-Node.ax-upXl,
.ax-hydrate.ax-active .ax-NodeList.ax-upXl > * {
  transform: translateY(0px); }
